{"version":3,"file":"task.js","sourceRoot":"","sources":["file:///C:/WorkspaceProjectTimeFrontEnd/time-tracker-frontend/tmp/broccoli_type_script_compiler-input_base_path-PrQq698J.tmp/0/src/app/task/task.ts"],"names":[],"mappings":";AAAA;;;GAGG;AACH;IACI,cAAmB,EAAU,EAClB,IAAY,EACZ,QAAgB,EAChB,OAAe;QAHP,OAAE,GAAF,EAAE,CAAQ;QAClB,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAQ;QAChB,YAAO,GAAP,OAAO,CAAQ;IAC1B,CAAC;IAED;;;;;OAKG;IACI,+BAAgB,GAAvB,UAAwB,GAAG;QACvB,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnE,CAAC;IAED;;;;;;OAMG;IACW,2BAAsB,GAApC,UAAqC,GAAG;QACpC,MAAM,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IAED;;;;OAIG;IACW,oBAAe,GAA7B;QACI,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IACL,WAAC;AAAD,CAAC,AApCD,IAoCC;AApCY,YAAI,OAoChB,CAAA","sourcesContent":["/**\r\n * Represents a Task model class\r\n * @class\r\n */\r\nexport class Task {\r\n    constructor(public id: number,\r\n        public name: string,\r\n        public duration: number,\r\n        public comment: string) {\r\n    }\r\n\r\n    /**\r\n     * Gets anonymous object's duration hours and duration minutes,\r\n     * and sets the totalDuration for object of type Task.\r\n     * @param obj the anonymous task object\r\n     * @return {number} total duration\r\n     */\r\n    public setTotalDuration(obj) {\r\n        this.duration = (Number(obj.hours) * 60) + Number(obj.minutes);\r\n    }\r\n\r\n    /**\r\n     * Parses anonymous object to an instance of Task class.\r\n     * Called when parsing JSON string from http request in order\r\n     * to map JS anonymous object to Task.\r\n     * @param obj the anonymous task\r\n     * @returns {Task} the parsed object\r\n     */\r\n    public static parseInputObjectToTask(obj) {\r\n        return new Task(obj.id, obj.name, obj.duration, obj.comment);\r\n    }\r\n\r\n    /**\r\n     * Creates an empty Task class instance.\r\n     * Used for two-way-binding in forms.\r\n     * @returns {Task} the empty Task\r\n     */\r\n    public static createEmptyTask() {\r\n        return new Task(null, null, null, null);\r\n    }\r\n}"]}