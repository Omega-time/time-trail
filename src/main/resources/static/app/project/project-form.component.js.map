{"version":3,"file":"project-form.component.js","sourceRoot":"","sources":["file:///C:/Users/gratsielazhelyazkova/workspace/time-tracker-frontend/tmp/broccoli_type_script_compiler-input_base_path-26SQqwme.tmp/0/src/app/project/project-form.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAsD,eAAe,CAAC,CAAA;AACtE,wBAAsB,WAAW,CAAC,CAAA;AAClC,gCAA6B,mBAAmB,CAAC,CAAA;AACjD,uBAAqB,iBAAiB,CAAC,CAAA;AAEvC;;;;;GAKG;AAOH;IAKI,8BAAoB,cAA8B,EACtC,MAAc;QADN,mBAAc,GAAd,cAAc,CAAgB;QACtC,WAAM,GAAN,MAAM,CAAQ;QAJ1B,WAAM,GAAG,IAAI,CAAC;QACJ,oBAAe,GAAG,IAAI,mBAAY,EAAW,CAAC;IAIxD,CAAC;IAED;;;;;OAKG;IACH,uCAAQ,GAAR;QACI,IAAI,CAAC,kBAAkB,GAAG,iBAAO,CAAC,kBAAkB,EAAE,CAAC;IAC3D,CAAC;IAED;;;;OAIG;IACH,yCAAU,GAAV;QAAA,iBAOC;QANG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC;aACnD,IAAI,CAAC,UAAA,YAAY;YACd,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YACvC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,KAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,wCAAS,GAAT;QAAA,iBAIC;QAHG,IAAI,CAAC,kBAAkB,GAAG,iBAAO,CAAC,kBAAkB,EAAE,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,GAAG,IAAI,EAAlB,CAAkB,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IArCD;QAAC,aAAM,EAAE;;iEAAA;IATb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,6BAA6B;YAC1C,SAAS,EAAE,CAAC,gCAAc,CAAC;SAC9B,CAAC;;4BAAA;IA0CF,2BAAC;AAAD,CAAC,AAzCD,IAyCC;AAzCY,4BAAoB,uBAyChC,CAAA","sourcesContent":["import {Component, OnInit, Output, EventEmitter} from \"@angular/core\";\r\nimport {Project} from \"./project\";\r\nimport {ProjectService} from \"./project.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n/**\r\n * Represents a form which sends a new project to\r\n * the {@link ProjectService} for storage.\r\n * Uses dependency injection for the service providers.\r\n * @class\r\n */\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'project-form',\r\n    templateUrl: 'project-form.component.html',\r\n    providers: [ProjectService]\r\n})\r\nexport class ProjectFormComponent implements OnInit {\r\n    projectToBeCreated: Project;\r\n    active = true;\r\n    @Output() newProjectAdded = new EventEmitter<boolean>();\r\n\r\n    constructor(private projectService: ProjectService,\r\n        private router: Router) {\r\n    }\r\n\r\n    /**\r\n     * Implemented method from {@link OnInit} interface which\r\n     * is called after the constructor of the class. Here\r\n     * we instantiate the projectToBeCreated with an empty\r\n     * Project object.\r\n     */\r\n    ngOnInit() {\r\n        this.projectToBeCreated = Project.createEmptyProject();\r\n    }\r\n\r\n    /**\r\n     * EventHandler method which is called when the Add new project\r\n     * button is clicked. The method calls the service to store\r\n     * the projectToBeCreated object.\r\n     */\r\n    addProject() {\r\n        this.projectService.saveProject(this.projectToBeCreated)\r\n            .then(newProjectId => {\r\n                this.router.navigateByUrl(\"/projects\");\r\n                this.newProjectAdded.emit(true);\r\n                this.formReset();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Resets the Create project form by giving projectToBeCreated an empty Project object. \r\n     */\r\n    formReset() {\r\n        this.projectToBeCreated = Project.createEmptyProject();\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n}\r\n"]}